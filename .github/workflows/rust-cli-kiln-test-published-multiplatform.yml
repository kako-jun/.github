name: Rust CLI Kiln - Test Published Packages Multi-Platform

on:
  workflow_call:
    inputs:
      project:
        description: 'Project to test'
        required: true
        type: string

jobs:
  test-matrix:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x64
          - os: ubuntu-latest
            arch: x64
            platform: linux-x64
          # Linux ARM64 (using emulation)
          - os: ubuntu-latest
            arch: arm64
            platform: linux-arm64
          # macOS Intel
          - os: macos-13
            arch: x64
            platform: darwin-x64
          # macOS Apple Silicon
          - os: macos-latest
            arch: arm64
            platform: darwin-arm64
          # Windows x64
          - os: windows-latest
            arch: x64
            platform: win32-x64
          # Windows ARM64
          - os: windows-latest
            arch: arm64
            platform: win32-arm64
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ format('kako-jun/{0}', inputs.project) }}
        ref: ${{ github.ref }}
        
      
    - name: Set up QEMU (for ARM64 emulation on Linux)
      if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64
        
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Checkout .github repository
      uses: actions/checkout@v4
      with:
        repository: kako-jun/.github
        path: .github
        
    - name: Create github-shared symlink
      run: |
        # Create the symlink using the provided script
        chmod +x scripts/utils/create-github-shared-symlink.sh
        ./scripts/utils/create-github-shared-symlink.sh
        
    - name: Test published packages
      run: |
        # Determine which projects to test
        PROJECTS_TO_TEST="${{ inputs.project }}"
        
        # Source common.sh from the symlinked .github
        source github-shared/rust-cli-kiln/scripts/utils/common.sh
        
        # Test each project
        for PROJECT in $PROJECTS_TO_TEST; do
          echo "======================================"
          echo "Testing $PROJECT on ${{ matrix.platform }}"
          echo "======================================"
          
          # Save current directory
          SAVED_DIR=$(pwd)
          
          # Setup environment for this project
          export WORKFLOW_CALL_PROJECT="$PROJECT"
          
          if setup_github_actions_env "$PROJECT"; then
            echo "Testing published packages for $PROJECT on ${{ matrix.platform }}..."
            github-shared/rust-cli-kiln/scripts/release/09-test-published-packages.sh
          else
            echo "$PROJECT project not found or setup failed, skipping..."
          fi
          
          # Return to saved directory for next project
          cd "$SAVED_DIR"
        done
      shell: bash
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.platform }}
        path: /tmp/*-test-report-*.txt
        retention-days: 30
        
  summary:
    needs: test-matrix
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v3
      with:
        path: test-results
        
    - name: Generate summary report
      run: |
        echo "# Multi-Platform Test Summary" > summary.md
        echo "" >> summary.md
        echo "Test Date: $(date)" >> summary.md
        echo "" >> summary.md
        
        # Process all test result files
        find test-results -name "*.txt" | while read -r file; do
          echo "## $(basename "$file" .txt)" >> summary.md
          echo "" >> summary.md
          echo '```' >> summary.md
          cat "$file" >> summary.md
          echo '```' >> summary.md
          echo "" >> summary.md
        done
        
        # Display summary
        cat summary.md
        
    - name: Upload summary report
      uses: actions/upload-artifact@v3
      with:
        name: test-summary
        path: summary.md
        retention-days: 90