name: Rust CLI Kiln - CI Build and Test

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.github/**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.github/**.md'
  workflow_dispatch:
    inputs:
      project-name:
        description: 'Project to run CI for'
        required: true
        type: choice
        options:
        - diffx
        - diffai
        - lawkit
  workflow_call:
    inputs:
      project-name:
        description: 'Project name (diffx, diffai, or lawkit)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        repository: ${{ github.event_name == 'workflow_call' && format('kako-jun/{0}', inputs.project-name) || github.event_name == 'workflow_dispatch' && format('kako-jun/{0}', github.event.inputs.project-name) || github.repository }}
        ref: ${{ github.event_name == 'workflow_dispatch' && 'main' || github.ref }}
      
    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
      
    - name: Add uv to PATH
      run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Setup environment and run build-and-test
      run: |
        # Setup environment variables for workflow type
        if [ "${{ github.event_name }}" = "workflow_call" ]; then
          export WORKFLOW_CALL_PROJECT="${{ inputs.project-name }}"
        elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          export WORKFLOW_DISPATCH_PROJECT="${{ github.event.inputs.project-name }}"
        fi
        
        # Source common.sh and setup environment
        if [ -d "rust-cli-kiln" ]; then
          # We're in .github repo
          source rust-cli-kiln/scripts/utils/common.sh
        elif [ -d ".github/rust-cli-kiln" ]; then
          # We're in project repo
          source .github/rust-cli-kiln/scripts/utils/common.sh
        else
          # Clone and source
          git clone https://github.com/kako-jun/.github.git /tmp/github-repo
          source /tmp/github-repo/rust-cli-kiln/scripts/utils/common.sh
        fi
        
        # Setup unified environment
        setup_github_actions_env
        
        # Run build and test
        echo "Running build and test for $PROJECT_NAME..."
        ./.github/rust-cli-kiln/scripts/release/05-build-and-test.sh